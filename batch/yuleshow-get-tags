#!/usr/bin/env python3

import os
import pyexiv2

def get_iptc_keywords(image_path):
    """Extract IPTC keywords from an image file."""
    try:
        with pyexiv2.Image(image_path) as img:
            iptc_data = img.read_iptc()
            if 'Iptc.Application2.Keywords' in iptc_data:
                return iptc_data['Iptc.Application2.Keywords']
    except Exception as e:
        print(f"Error reading {image_path}: {e}")
    return None

def calculate_depth(root_path, current_path):
    """Calculate the depth of the current folder relative to the root."""
    return current_path[len(root_path):].count(os.path.sep)

def scan_folder_for_images(folder_path, output_file_path):
    """Scan a folder recursively for image files, extract IPTC keywords, and report folder depth."""
    unique_keywords = set()
    with open(output_file_path, 'w', encoding='utf-8') as output_file:
        for root, dirs, files in os.walk(folder_path):
            depth = calculate_depth(folder_path, root)
            print(f"Scanning at depth {depth}: {root}")
            for file in files:
                if file.lower().endswith(('.png', '.jpg', '.jpeg', '.tiff', '.bmp', '.gif')):
                    image_path = os.path.join(root, file)
                    keywords = get_iptc_keywords(image_path)
                    if keywords:
                        print(f"Processing {image_path}")
                        print(f"Tags found: {', '.join(keywords)}")
                        unique_keywords.update(keywords)

        # Write unique keywords in comma-separated format to the file
        output_file.write(", ".join(unique_keywords))

# Use the current working directory
current_folder_path = os.getcwd()
output_file_path = os.path.join(current_folder_path, 'unique_iptc_keywords_output.txt')
scan_folder_for_images(current_folder_path, output_file_path)

print("Unique IPTC Keywords extraction completed. Check 'unique_iptc_keywords_output.txt' for results.")
